
syntax = "proto3";

package pylon.discord.v1.cache;
option java_package = "bot.pylon.proto.discord.v1.cache";
option java_multiple_files = true;
option go_package =
    "github.com/pylonbot/pylon-gateway-protobuf-go/discord/v1/cache";

import "google/protobuf/wrappers.proto";
import "discord/v1/model.proto";

// GetGuild

message GetGuildRequest {}

message GetGuildResponse {
  pylon.discord.v1.model.GuildData guild = 1;
}

// ListGuildChannels

message ListGuildChannelsRequest {}

message ListGuildChannelsResponse {
  repeated pylon.discord.v1.model.ChannelData channels = 1;
}

// GetGuildChannel

message GetGuildChannelRequest {
  fixed64 channel_id = 1 [jstype = JS_STRING];
}

message GetGuildChannelResponse {
  pylon.discord.v1.model.ChannelData channel = 1;
}

// ListGuildMembers

message ListGuildMembersRequest {
  fixed64 after = 1 [jstype = JS_STRING];
  uint32 limit = 2;
}

message ListGuildMembersResponse {
  repeated pylon.discord.v1.model.MemberData members = 1;
}

// GetGuildMember

message GetGuildMemberRequest {
  fixed64 user_id = 1 [jstype = JS_STRING];
}

message GetGuildMemberResponse {
  pylon.discord.v1.model.MemberData member = 1;
}

// FindGuildMember

message FindGuildMembersRequest {
  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue prefix = 2;
  discord.v1.model.PresenceData.OnlineStatus status = 3;
  pylon.discord.v1.model.SnowflakeValue role_id = 4;
  uint32 limit = 99;
}

message FindGuildMembersResponse {
  repeated pylon.discord.v1.model.MemberData members = 1;
}

// GetGuildMemberPresence

message GetGuildMemberPresenceRequest {
  fixed64 user_id = 1 [jstype = JS_STRING];
}

message GetGuildMemberPresenceResponse {
  pylon.discord.v1.model.PresenceData presence = 1;
}

// ListGuildRoles

message ListGuildRolesRequest {}

message ListGuildRolesResponse {
  repeated pylon.discord.v1.model.RoleData roles = 1;
}

// GetGuildRole

message GetGuildRoleRequest {
  fixed64 role_id = 1 [jstype = JS_STRING];
}

message GetGuildRoleResponse {
  pylon.discord.v1.model.RoleData role = 1;
}

// ListGuildEmojis

message ListGuildEmojisRequest {}

message ListGuildEmojisResponse {
  repeated pylon.discord.v1.model.EmojiData emojis = 1;
}

// GetGuildEmoji

message GetGuildEmojiRequest {
  fixed64 emoji_id = 1 [jstype = JS_STRING];
}

message GetGuildEmojiResponse {
  pylon.discord.v1.model.EmojiData emoji = 1;
}

// GetGuildMemberVoiceState

message GetGuildMemberVoiceStateRequest {
  fixed64 user_id = 1 [jstype = JS_STRING];
}

message GetGuildMemberVoiceStateResponse {
  pylon.discord.v1.model.VoiceStateData voice_state_data = 1;
}

// ListGuildChannelVoiceStates

message ListGuildChannelVoiceStatesRequest {
  fixed64 channel_id = 1 [jstype = JS_STRING];
}

message ListGuildChannelVoiceStatesResponse {
  repeated pylon.discord.v1.model.VoiceStateData voice_states_data = 1;
}

// GetUser

message GetUserRequest {
  fixed64 user_id = 1 [jstype = JS_STRING];
}

message GetUserResponse {
  pylon.discord.v1.model.UserData user = 1;
}
